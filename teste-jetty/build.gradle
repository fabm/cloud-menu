group 'pt.ipg.ei.cloud.menu'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'war'

version = '1.0'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.eclipse.jetty', name: 'jetty-webapp', version: '9.3.0.M1'
    compile group: 'org.glassfish.jersey.core', name: 'jersey-server', version: '2.7'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-servlet-core', version: '2.7'
    compile group: 'org.glassfish.jersey.containers', name: 'jersey-container-jetty-http', version: '2.7'
    compile group: 'org.glassfish.jersey.media', name: 'jersey-media-moxy', version: '2.7'
    compile group: 'org.eclipse.jetty.aggregate', name: 'jetty-all', version: '9.3.0.M1'
    testCompile group: 'junit', name: 'junit', version: '4.11'
}

task runApp(type: JavaExec, dependsOn: 'war') {
    classpath = sourceSets.main.runtimeClasspath

    main = 'server.RestServer'

    // arguments to pass to the application
    args project.war.archivePath
}

task runAppExploded(type: JavaExec, dependsOn: 'war') {
    def tjDir = project.projectDir

    def webappDir = "$tjDir/src/main/webapp"
    ant.delete(dir: webappDir)
    ant.unzip(src:war.archivePath,dest:webappDir)
    classpath = sourceSets.main.runtimeClasspath

    main = 'server.RestServer'

    // arguments to pass to the application
    args webappDir
}

task refreshTestJettyContent() << {
    def tjDir = project.projectDir
    ant.delete dir: "$tjDir/src/main/webapp"
    ant.copy(todir: "$tjDir/src/main/webapp") {
        fileset (dir: "${project(':web-client').projectDir}/src/main/webapp")
    }

    def pathToModel = "/src/main/java/pt/ipg/ei/cloud/menu/client/model"
    ant.delete dir: "$tjDir$pathToModel"
    ant.copy(todir: "$tjDir$pathToModel") {
        fileset (dir: "${project(':web-client').projectDir}$pathToModel")
    }
}

task cleanRun(dependsOn:['clean','refreshTestJettyContent','runApp'])